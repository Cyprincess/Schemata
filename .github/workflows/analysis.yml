name: analysis

on:
  push:
    branches:
      - master
      - rel/*
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: 1
  NUGET_PACKAGES: ${{ github.workspace }}/.packages
  NUGET_XMLDOC_MODE: skip
  SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
  SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
  SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
  TERM: xterm

jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache packages
        uses: actions/cache@v4
        with:
          path: |
            .dotnet
            .packages
          key: ${{ runner.os }}-packages

      - name: Setup SonarScanner for .NET
        run: |
          ./eng/common/build.sh --restore --ci --prepareMachine /p:RestoreDotNetWorkloads=true
          ./.dotnet/dotnet tool install --local --create-manifest-if-needed dotnet-sonarscanner
          echo "$GITHUB_WORKSPACE/.dotnet" >> $GITHUB_PATH

      - name: Begin SonarScanner
        if: github.event_name != 'pull_request'
        run: |
          dotnet sonarscanner begin \
                /k:"$SONAR_PROJECT_KEY" \
                /o:"$SONAR_ORGANIZATION" \
                /d:sonar.token="$SONAR_TOKEN" \
                /d:sonar.host.url="$SONAR_HOST_URL" \
                /d:sonar.branch.name="$GITHUB_REF_NAME" \
                /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" \
                /d:sonar.cs.vstest.reportsPaths="**/TestResults/**/*.trx"
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Begin SonarScanner
        if: github.event_name == 'pull_request'
        run: |
          dotnet sonarscanner begin \
                /k:"$SONAR_PROJECT_KEY" \
                /o:"$SONAR_ORGANIZATION" \
                /d:sonar.token="$SONAR_TOKEN" \
                /d:sonar.host.url="$SONAR_HOST_URL" \
                /d:sonar.pullrequest.key="${{ github.event.number }}" \
                /d:sonar.pullrequest.branch="$GITHUB_HEAD_REF" \
                /d:sonar.pullrequest.base="$GITHUB_BASE_REF" \
                /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" \
                /d:sonar.cs.vstest.reportsPaths="**/TestResults/**/*.trx"
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Run VSTest
        run: |
          ./eng/common/build.sh --build --test --ci --integrationTest --prepareMachine --warnAsError false

      - name: End SonarScanner
        run: |
          dotnet sonarscanner end /d:sonar.token="$SONAR_TOKEN"
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  cocogitto:
    name: Cocogitto
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Conventional commit check
        uses: cocogitto/cocogitto-action@v3
